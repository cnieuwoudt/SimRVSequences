% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_seqFunctions.R
\name{sim_RVseq}
\alias{sim_RVseq}
\title{Simulate sequence data for a pedigree}
\usage{
sim_RVseq(ped_file, founder_genos, marker_map, chrom_map, RV_marker,
  burn_in = 1000, gamma_params = c(2.63, 2.63/0.5))
}
\arguments{
\item{ped_file}{Data frame. Must match format of pedigree simulated by sim_RVped}

\item{founder_genos}{Dataframe.  A dataframe with rows corresponding to founders, and colums corresponding to markers.  Markers must be listed in same order as \code{marker_map}.}

\item{marker_map}{Dataframe. Must contain three columns with: column 1: marker names, must be listed in the same order as in the founder genotype file, column 2: the chromosomal position of the marker, column 3: the position of the marker in cM.}

\item{chrom_map}{Data.frame.  A data.frame consisting of three columns: column 1 contains the chromosome numbers, column 2 start postion of chromosome (in cM), column 3 end position of chromosome (in cM).}

\item{RV_marker}{character. The marker name of the RV locus.}

\item{burn_in}{Numeric. The burn in distance in cM.}

\item{gamma_params}{Numeric list of length 2. The respective shape and rate parameters gamma distribution used to simulate distance between chiasmata.  By default, \code{gamma_params = c(2.63, 2.63/0.5)}, as discussed in Vorrips (2012).}
}
\value{
offspring_sequences
}
\description{
Simulate sequence data for a pedigree
}
\examples{
library(SimRVPedigree)
library(kinship2)
#Read in age-specific hazards
data(EgPeds)

ex_RVped <- EgPeds[which(EgPeds$FamID == 4), ]

# Define pedigree object for trimmed pedigree, i.e, pedigree with
#proband selected and relatives trimmed
TrimRVped <- pedigree(id = ex_RVped$ID,
                      dadid = ex_RVped$dadID,
                      momid = ex_RVped$momID,
                      sex = (ex_RVped$sex + 1),
                      affected = cbind(Affected = ex_RVped$affected,
                                       Proband = ex_RVped$proband,
                                       RV_status = ex_RVped$DA1 +
                                                   ex_RVped$DA2),
                      famid = ex_RVped$FamID)['4']

 plot(TrimRVped)
 pedigree.legend(TrimRVped, location = "topleft",  radius = 0.25)

my_chrom_map = data.frame(chrom     = c(1),
                          start_pos = c(0),
                          end_pos   = c(250),
                          center = c(50))
my_chrom_map
my_RV_marker <- "1_50"

mark_map <- data.frame(chrom = c(1, 1, 1, 1, 1, 1, 1),
                       position = c(20, 50, 100, 125, 175, 200, 250))
mark_map$marker <- paste0(mark_map$chrom, sep = "_", mark_map$position)
mark_map <- mark_map[, c(3, 1, 2)]
mark_map


founder_seq2 <- matrix(rep(letters[1:(2*nrow(mark_map))], length(which(is.na(ex_RVped$dadID)))),
                       nrow = 2*length(which(is.na(ex_RVped$dadID))),
                       byrow = T)
colnames(founder_seq2) = as.character(mark_map$marker)

founder_seq2[1, which(colnames(founder_seq2) == my_RV_marker)] <- 'X'
founder_seq2 <- as.data.frame(founder_seq2)
founder_seq2$ID = rep(ex_RVped$ID[which(is.na(ex_RVped$dadID))], each = 2)
founder_seq2

set.seed(6)
ped_seq <- sim_RVseq(ped_file = ex_RVped,
                     founder_genos = founder_seq2,
                     marker_map = mark_map,
                     chrom_map = my_chrom_map,
                     RV_marker = my_RV_marker)
ped_seq

set.seed(6)
system.time(sim_RVseq(ped_file = ex_RVped,
                      founder_genos = founder_seq2,
                      marker_map = mark_map,
                      chrom_map = my_chrom_map,
                      RV_marker = my_RV_marker))

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_seqFunctions.R
\name{sim_RVseq}
\alias{sim_RVseq}
\title{Simulate sequence data for a pedigree}
\usage{
sim_RVseq(ped_file, founder_genos, linkage_map, chrom_map, RV_marker,
  burn_in = 1000, gamma_params = c(2.63, 2.63/0.5))
}
\arguments{
\item{ped_file}{Data frame. Must match format of pedigree simulated by sim_RVped}

\item{founder_genos}{Dataframe.  A dataframe with rows corresponding to founders, and colums corresponding to markers.  Markers must be listed in same order as \code{linkage_map}.}

\item{linkage_map}{Dataframe. Must contain three columns with: column 1: marker names, must be listed in the same order as in the founder genotype file, column 2: the chromosomal position of the marker, column 3: the position of the marker in cM.}

\item{chrom_map}{Data.frame.  A data.frame consisting of three columns: column 1 contains the chromosome numbers, column 2 start postion of chromosome (in cM), column 3 end position of chromosome (in cM).}

\item{RV_marker}{character. The marker name of the RV locus.}
}
\value{
offspring_sequences
}
\description{
Simulate sequence data for a pedigree
}
\examples{
library(SimRVPedigree)
library(kinship2)
#Read in age-specific hazards
data(EgPeds)

ex_RVped <- EgPeds[which(EgPeds$FamID == 4), ]

# Define pedigree object for trimmed pedigree, i.e, pedigree with
#proband selected and relatives trimmed
TrimRVped <- pedigree(id = ex_RVped$ID,
                      dadid = ex_RVped$dad_id,
                      momid = ex_RVped$mom_id,
                      sex = (ex_RVped$gender + 1),
                      affected = cbind(Affected = ex_RVped$affected,
                                       Proband = ex_RVped$proband,
                                       RV_status = ex_RVped$DA1 +
                                                   ex_RVped$DA2),
                      famid = ex_RVped$FamID)['4']

 plot(TrimRVped)
 pedigree.legend(TrimRVped, location = "topleft",  radius = 0.25)

my_chrom_map = data.frame(chrom     = c(1, 2),
                          start_pos = c(0, 0),
                          end_pos   = c(270, 200),
                          center = c(55, 40))
my_chrom_map
my_RV_marker <- "1_50"

link_map <- data.frame(chromosome = c(1, 1, 1, 1, 1, 1, 1,
                                      2, 2, 2, 2, 2, 2),
                       position = c(20, 50, 100, 125, 175, 200, 250,
                                     0, 25,  75, 125, 150, 200))
link_map$marker <- paste0(link_map$chromosome, sep = "_", link_map$position)
link_map <- link_map[, c(3, 1, 2)]
link_map


set.seed(1)
founder_seq2 <- matrix(sample(2*nrow(link_map)*length(which(is.na(ex_RVped$dad_id))),
                             x = c('a', 'c', 'g', 't'),  replace = T),
                             nrow = 2*length(which(is.na(ex_RVped$dad_id))))
colnames(founder_seq2) = as.character(link_map$marker)

founder_seq2[1, which(colnames(founder_seq2) == my_RV_marker)] <- 'X'
founder_seq2 <- as.data.frame(founder_seq2)
founder_seq2$ID = rep(ex_RVped$ID[which(is.na(ex_RVped$dad_id))], each = 2)
founder_seq2

set.seed(6)
ped_seq <- sim_RVseq(ped_file = ex_RVped,
                     founder_genos = founder_seq2,
                     linkage_map = link_map,
                     chrom_map = my_chrom_map,
                     RV_marker = my_RV_marker)
ped_seq

set.seed(6)
system.time(sim_RVseq(ped_file = ex_RVped,
                      founder_genos = founder_seq2,
                      linkage_map = link_map,
                      chrom_map = my_chrom_map,
                      RV_marker = my_RV_marker))

}


% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SlimFunctions.R
\name{read_slim}
\alias{read_slim}
\title{Import SLiM Data to R}
\usage{
read_slim(file_path, keep_maf = 0.01, recomb_map = NULL,
  pathway_df = NULL)
}
\arguments{
\item{file_path}{character.  The file path of the SLiM 2.0 output file.}

\item{keep_maf}{numeric. The largest allele frequency for retained SNVs.  All variants with allele frequency greater than \code{keep_maf} will be removed.  Please note, removing common variants is recommended for large datasets due to the limitations of data allocation in \code{R}.}

\item{recomb_map}{data frame. The recombination map provided to SLiM 2.0, see details.}

\item{pathway_df}{data frame. A data frame that contains the positions for each exon in the pathway of interest.  This data frame must contain the variables \code{chrom}, \code{exonStart}, and \code{exonEnd}.  See details.}
}
\value{
A list containing:

\item{\code{Mutations} }{A dataframe containing SNV information, see details..}

\item{\code{Genomes} }{A sparse matrix of haplotypes, see details.}
}
\description{
Import SNV data from txt file produced by SLiM's outputFull() method
}
\details{
The \code{read_slim} function is used to extract SNV (single nucleotide variant) data from the text file produced by SLiM's outputFull() method. Currently, we do not support output in MS or VCF format (i.e. output produced by SLiM's outputMSSample() or outputVCFSample() methods).

When supplied, we expect that `pathwayDF` does not contain any overlapping segments.  *All overlapping exons MUST be combined into a single observation. Please execute the command `help(combine_exons)` for more details.*

In addition to allowing users to specify recombination hotspots, the recombination map provided to SLiM can be used to simulate mutations over unlinked regions (i.e. in different chromosomes) or in linked but non-contiguous regions (i.e in exon-only data).  The \code{\link{create_slimMap}} function may be used to create a recombination map to simulate exon-only data with SLiM.  In this case, simply supply the data frame returned by \code{create_slimMap} to the \code{recomb_map} argument of \code{read_slim} to map mutations to their actual locations and/or their appropriate chromosomes.  If \code{create_slimMap} was not used to create the recombination map used with SLiM 2.0, users must take care to ensure that \code{recomb_map} is of the same form as the output produced by \code{\link{create_slimMap}}.

The first item returned by \code{read_slim} is a data frame named \code{Mutations}, which catalouges SNV ID, genomic position, chromosome, and derived allele frequency.  The variable \code{colID} references the SNV's ID which is also its column position in the sparse genotype matrix. The variable \code{position} is the genomic position of the SNV (in bp), and \code{afreq} is the derived allele frequency of the SNV, \code{chrom} identifies the chromosome, and \code{marker} is a unique character identifier.  When \code{recomb_map} is not provided, we assume that all mutations reside on the first chromosome so that \code{chrom} is 1 for every mutation.

The second item returned is a sparse matrix named \code{Genomes}.  This matrix contains two rows for each diploid individual in the population. That is, each row is one of the haplotypes for a single individual in the population.  For example, the first individual's inherited haplotypes are stored in rows one and two, respectively. The third and fourth rows contain haplotypes for the second individual, fifth and sixth rows contain haplotypes for the third individual, and so on.

NOTE TO SELF:
\itemize{
 \item For file extension internal check use: importFrom tools file_ext
 \item If possible, add test: two rows for each person in genotypes matrix
}
}
\examples{
#FIND WORKING EXAMPLE

\dontrun{
a = Sys.time()
sout = read_slim(file_path = "C:/Data/Slim/SlimFINALout.txt",
                 keep_maf = 0.01,
                 recomb_map = create_slimMap(hg_exons),
                 pathway_df = hg_apopPath)
b = Sys.time()
difftime(b, a, units = "mins")

sout = read_slim(file_path = "C:/Data/Slim/SLiMtest_output.txt",
                 keep_maf = 0.01)
}
}
\references{
Haller, B., Messer, P. W. (2017). \emph{Slim 2: Flexible, interactive forward genetic simulations}. Molecular Biology and Evolution; 34(1), pp. 230-240.
}
